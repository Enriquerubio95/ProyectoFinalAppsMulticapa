/*
 * File: app/view/VistaPrincipalViewController.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Usuarios.view.VistaPrincipalViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.vistaprincipal',

    VentanaUsuario: function(titulo) {
        var ventana = Ext.getCmp('VentanaUsuario'),
            selection = Ext.getCmp('clientesGrid').getSelectionModel().getSelection()[0];
        this.getView().add(ventana);

        if(titulo == 'Editar cliente'){
            ventana = Ext.create('widget.usuario',
                                 {viewModel:{
                                     data: {cliente: selection}
                                 }}
                                );
            ventana.setTitle(titulo);
            ventana.show();
        }

        if(titulo == 'Cliente nuevo'){
            ventana = Ext.create('widget.usuario');
            ventana.setTitle(titulo);
            ventana.show();
        }
    },

    parametrosFiltrado: function() {
        var referencia = this.getReferences(),
            buscar = referencia.campoBusqueda,
            filtro = referencia.comboFiltro,
            seleccion = filtro.getValue();

        if(seleccion == "Nombre"){
            if(buscar.value){
                this.creacionDeFiltros(seleccion);
            }
        }

        if(seleccion == "Ciudad"){
            if(buscar.value){
                this.creacionDeFiltros(seleccion);
            }
        }

        if(seleccion == "Estado"){
            if(buscar.value){
                this.creacionDeFiltros(seleccion);
            }
        }
    },

    creacionDeFiltros: function(seleccion) {
        var referencia = this.getReferences(),
            buscar = referencia.campoBusqueda,
            filtros = referencia.clientesGrid.store.getFilters();

        this.filter = filtros.add({
                id: seleccion + 'Filter',
                property: seleccion,
                value: buscar.value,
                anyMatch: true,
                caseSensitive: false
        });
    },

    onTxtBusquedaKeypress: function(textfield, e, eOpts) {
        if (e.keyCode){
            switch (e.keyCode){
                case 13:
                this.parametrosFiltrado();
                break;
            }
        }
    },

    onTxtBusquedaChange: function(field, newValue, oldValue, eOpts) {
        var text = this.getReferences().campoBusqueda.getValue(),
            store = this.getReferences().clientesGrid.getStore();

        if(text=="" || text ==null){
            store.clearFilter();
        }
    },

    onBtnAceptarCGClick: function(button, e, eOpts) {
        var titulo = 'Cliente nuevo';
        this.VentanaUsuario(titulo);
    },

    onBtnEditarCGClick: function(button, e, eOpts) {
        var titulo = 'Editar cliente';
        this.VentanaUsuario(titulo);
    },

    onBtnEliminarCGClick: function(button, e, eOpts) {
        var selection = Ext.getCmp('clientesGrid').getSelectionModel().getSelection()[0];

        Ext.Ajax.request({
            url: 'http://localhost:52110/api/Clientes/' + selection.data.Id,
            method: 'DELETE',
            headers: {'Content-Type': 'application/json;charset=utf-8'}
        });

        Ext.getCmp('clientesGrid').getStore().load();
        Ext.getCmp('clientesGrid').getView().refresh();
        Ext.Msg.alert('Aviso', 'Cliente eliminado con exito');
    },

    onToolRefreshClick: function(tool, e, owner, eOpts) {
        Ext.getCmp('clientesGrid').getStore().load();
        Ext.getCmp('clientesGrid').getView().refresh();
    }

});
