/*
 * File: app/view/UsuarioViewController.js
 *
 * This file was generated by Sencha Architect version 4.1.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 6.2.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 6.2.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Usuarios.view.UsuarioViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.usuario',

    onBtnCancelarClick: function(button, e, eOpts) {
        this.closeView();
    },

    onBtnAceptarClick: function(button, e, eOpts) {
        var window = button.up('window'),
            vm = this.getViewModel(),
            form = button.up('form').getForm();

        if(window.title === 'Editar cliente'){
            var data = vm.data.cliente.data;
            Ext.Ajax.request({
                url: 'http://localhost:52110/api/Clientes/' + data.Id,
                method: 'PUT',
                headers: {'Content-Type': 'application/json;charset=utf-8'},
                jsonData:{
                    Id: data.Id,
                    Nombre: form.findField('Nombre').getValue(),
                    ApellidoPaterno: form.findField('ApPaterno').getValue(),
                    ApellidoMaterno: form.findField('ApMaterno').getValue(),
                    CorreoElectronico: form.findField('Correo').getValue(),
                    Telefono: form.findField('Telefono').getValue(),
                    Calle: form.findField('Calle').getValue(),
                    NumeroExterior: form.findField('NoExterior').getValue(),
                    NumeroInterior: form.findField('NoInterior').getValue(),
                    Ciudad: form.findField('Ciudad').getValue(),
                    Estado: form.findField('Estado').getValue(),
                }
            });
            Ext.getStore('Usuarios').load();
            Ext.Msg.alert('Aviso', 'Cliente editado con exito');
            Ext.getCmp('clientesGrid').getView().refresh();
            this.closeView();

        }

        if(window.title === 'Cliente nuevo'){
            Ext.Ajax.request({
                url: 'http://localhost:52110/api/Clientes',
                method: 'POST',
                headers: {'Content-Type': 'application/json;charset=utf-8'},
                jsonData:{
                    Nombre: form.findField('Nombre').getValue(),
                    ApellidoPaterno: form.findField('ApPaterno').getValue(),
                    ApellidoMaterno: form.findField('ApMaterno').getValue(),
                    CorreoElectronico: form.findField('Correo').getValue(),
                    Telefono: form.findField('Telefono').getValue(),
                    Calle: form.findField('Calle').getValue(),
                    NumeroExterior: form.findField('NoExterior').getValue(),
                    NumeroInterior: form.findField('NoInterior').getValue(),
                    Ciudad: form.findField('Ciudad').getValue(),
                    Estado: form.findField('Estado').getValue(),
                }
            });
            Ext.getStore('Usuarios').load();
            Ext.Msg.alert('Aviso', 'Cliente creado con exito');
            Ext.getCmp('clientesGrid').getView().refresh();
            this.closeView();
        }
    },

    onVentanaUsuarioShow: function(component, eOpts) {
        var vm = this.getViewModel(),
            form = component.down('form').getForm();

        if(component.title === 'Editar cliente'){
            var data = vm.data.cliente.data;
            form.findField('Nombre').setValue(data.Nombre);
            form.findField('ApPaterno').setValue(data.ApellidoPaterno);
            form.findField('ApMaterno').setValue(data.ApellidoMaterno);
            form.findField('Correo').setValue(data.CorreoElectronico);
            form.findField('Telefono').setValue(data.Telefono);
            form.findField('Calle').setValue(data.Calle);
            form.findField('NoExterior').setValue(data.NumeroExterior);
            form.findField('NoInterior').setValue(data.NumeroInterior);
            form.findField('Ciudad').setValue(data.Ciudad);
            form.findField('Estado').setValue(data.Estado);
        }
    }

});
